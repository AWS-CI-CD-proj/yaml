apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: backend-ns
  labels:
    app: attend-backend
  name: attend-backend-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: attend-backend
  template:
    metadata:
      labels:
        app: attend-backend
    spec:
      containers:
      - image: 761278642645.dkr.ecr.ap-northeast-2.amazonaws.com/attend-back-flask:latest
        name: attend-backend
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        env:
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: attend-backend-cm
              key: MYSQL_HOST
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: frontend-ns
  labels:
    app: attend-frontend-deploy
  name: attend-frontend-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: attend-frontend
  template:
    metadata:
      labels:
        app: attend-frontend
    spec:
      containers:
      - image: 761278642645.dkr.ecr.ap-northeast-2.amazonaws.com/attend-front-nextjs:latest
        name: attend-frontend
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "400m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: database-ns
  labels:
    app: attend-db-deploy
  name: attend-db-deploy
spec:
  selector:
    matchLabels:
      app: attend-db
  template:
    metadata:
      labels:
        app: attend-db
    spec:
      containers:
      - image: 761278642645.dkr.ecr.ap-northeast-2.amazonaws.com/attend-db-mysql:latest
        name: attend-db
        ports:
        - containerPort: 3306
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: backend-ns
  labels:
    app: qa-backend-deploy
  name: qa-backend-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qa-backend
  template:
    metadata:
      labels:
        app: qa-backend
    spec:
      containers:
      - image: 761278642645.dkr.ecr.ap-northeast-2.amazonaws.com/qa-back-django:latest
        name: qa-backend
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        env:
        - name: MONGO_IP
          valueFrom:
            configMapKeyRef:
              name: qa-backend-cm
              key: MONGO_IP
        - name: MONGO_PORT
          valueFrom:
            configMapKeyRef:
              name: qa-backend-cm
              key: MONGO_PORT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: frontend-ns
  labels:
    app: qa-frontend-deploy
  name: qa-frontend-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qa-frontend
  template:
    metadata:
      labels:
        app: qa-frontend
    spec:
      containers:
      - image: 761278642645.dkr.ecr.ap-northeast-2.amazonaws.com/qa-front-nextjs:latest
        name: qa-frontend
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "400m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: database-ns
  labels:
    app: qa-db-deploy
  name: qa-db-deploy
spec:
  selector:
    matchLabels:
      app: qa-db
  template:
    metadata:
      labels:
        app: qa-db
    spec:
      containers:
      - image: 761278642645.dkr.ecr.ap-northeast-2.amazonaws.com/qa-db-mongo:latest
        name: qa-db
        ports:
        - containerPort: 27017
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
